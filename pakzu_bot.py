import telebot
import re
from telebot import types

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = '7627809698:AAGV9AUSB4_JmF6GPKq8La4BEOyFYK0JH8U'
YUAN_RATE = 13          # –∫—É—Ä—Å —é–∞–Ω—è
USD_RATE = 90           # –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞
DELIVERY_RATE = 3.3     # $/–∫–≥ –¥–æ—Å—Ç–∞–≤–∫–∞
ADMIN_USERNAME = '@boss_dd'  # –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

bot = telebot.TeleBot(TOKEN)
user_data = {}

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===
def main_menu(chat_id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:"):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üîÅ –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç", "‚ÑπÔ∏è –ü–æ–º–æ—â—å", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    bot.send_message(chat_id, text, reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    main_menu(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –∏–∑ –ö–∏—Ç–∞—è üá®üá≥ ‚û°Ô∏è üá∑üá∫")

@bot.message_handler(func=lambda m: True)
def menu_handler(message):
    if message.text == "üîÅ –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç":
        user_data[message.chat.id] = {}

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏–ª–∏ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ:", reply_markup=markup)
        bot.register_next_step_handler(message, get_link)

    elif message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É:\n\n1. –í—ã–±–µ—Ä–∏—Ç–µ '–ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç'\n2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —à–∞–≥–∏\n3. –ü–æ–ª—É—á–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É üí∞")

    elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(message.chat.id, "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: @boss_dd")

    else:
        bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª. –í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é:")
        main_menu(message.chat.id)

# === –≠–¢–ê–ü–´ ===

def get_link(message):
    text = message.text.strip()

    if text.lower() == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        user_data[message.chat.id]['link'] = "–ë–µ–∑ —Å—Å—ã–ª–∫–∏ (–≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é)"
    else:
        url_pattern = re.compile(r'https?://\S+|www\.\S+')
        if not url_pattern.search(text):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.add("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
            bot.send_message(message.chat.id, "‚ùóÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'.", reply_markup=markup)
            bot.register_next_step_handler(message, get_link)
            return
        user_data[message.chat.id]['link'] = text

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —Ü–µ–Ω—É –∑–∞ 1 —à—Ç –≤ —é–∞–Ω—è—Ö:", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_price)

def get_price(message):
    try:
        user_data[message.chat.id]['price'] = float(message.text)
        bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é (–≤ —é–∞–Ω—è—Ö)?")
        bot.register_next_step_handler(message, get_domestic_delivery)
    except:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
        bot.register_next_step_handler(message, get_price)

def get_domestic_delivery(message):
    try:
        user_data[message.chat.id]['cn_delivery'] = float(message.text)
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏ –≤–µ—Å 1 —à—Ç—É–∫–∏ –≤ –∫–≥:")
        bot.register_next_step_handler(message, get_weight)
    except:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
        bot.register_next_step_handler(message, get_domestic_delivery)

def get_weight(message):
    try:
        user_data[message.chat.id]['weight'] = float(message.text)
        bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –Ω—É–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å?")
        bot.register_next_step_handler(message, get_quantity)
    except:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
        bot.register_next_step_handler(message, get_weight)

def get_quantity(message):
    try:
        user_data[message.chat.id]['quantity'] = int(message.text)
        data = user_data[message.chat.id]

        total_price = (data['price'] + data['cn_delivery']) * YUAN_RATE * data['quantity']
        total_weight = data['weight'] * data['quantity']
        delivery_cost = total_weight * DELIVERY_RATE * USD_RATE
        final_total = round(total_price + delivery_cost, 2)
response = (
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {round(total_price, 2)} ‚ÇΩ\n"
            f"üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –†–§: {round(delivery_cost, 2)} ‚ÇΩ\n"
            f"üî¢ –ò—Ç–æ–≥–æ: {final_total} ‚ÇΩ"
        )

        bot.send_message(message.chat.id, response)

        admin_msg = (
            f"üì• –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç –æ—Ç @{message.chat.username or '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}:\n\n"
            f"üõí –¢–æ–≤–∞—Ä: {data['link']}\n"
            f"–¶–µ–Ω–∞: {data['price']} —é–∞–Ω–µ–π\n"
            f"–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é: {data['cn_delivery']} —é–∞–Ω–µ–π\n"
            f"–í–µ—Å 1 —à—Ç: {data['weight']} –∫–≥\n"
            f"–ö–æ–ª-–≤–æ: {data['quantity']}\n\n"
            f"üí∞ –ò—Ç–æ–≥–æ: {final_total} ‚ÇΩ"
        )
        bot.send_message(ADMIN_USERNAME, admin_msg)

        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        main_menu(message.chat.id, "‚úÖ –ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        
    except:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.")
        bot.register_next_step_handler(message, get_quantity)

# === –ó–ê–ü–£–°–ö ===
bot.polling()